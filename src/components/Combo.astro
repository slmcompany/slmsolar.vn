---
import type { Sector, Combo } from "../interfaces/combos.ts";

export interface Props {
    nhom_combo: string;
    zalo: string;
    comboId?: number;
}

const { nhom_combo, zalo, comboId } = Astro.props;

// Fetch data from API with error handling
let Combos: Combo[] = [];
try {
    const response = await fetch('https://api.slmglobal.vn/api/sector');
    if (!response.ok) {
        const errorData = await response.text();
        console.error('API Error Details:', {
            status: response.status,
            statusText: response.statusText,
            errorData
        });
        // Add fallback data
        Combos = [{
            id: 1,
            code: "COMBO-001",
            name: "Combo Mẫu",
            description: "Combo pin mặt trời mẫu",
            installation_type: nhom_combo === "On-Grid" ? "Ongrid" : "Hybrid",
            phase_type: "1-phase",
            total_price: 50000000,
            payback_period: 5,
            output_max: 5000,
            output_min: 3000,
            best_selling: true,
            image: "/images/fallback-combo.jpg",
            grouped_merchandises: [{
                template: { 
                    name: "Pin mặt trời",
                    code: 'PIN_PV',
                    is_main: true
                },
                pre_quote_merchandises: [{
                    quantity: 1,
                    merchandise: {
                        name: "Pin mặt trời 5kW",
                        code: "PV-5000",
                        description_in_quotation: "Pin mặt trời công suất 5kW",
                        data_json: {
                            power_watt: 5000,
                            width_mm: 2000,
                            height_mm: 1000,
                            thickness_mm: 40,
                            area_m2: 20,
                            weight_kg: 25,
                            technology: "Monocrystalline",
                            warranty_years: 25
                        },
                        brand: {
                            name: "SLM Solar",
                            code: "SLM"
                        }
                    }
                }]
            }]
        }];
        return;
    }
    const sectors: Sector[] = await response.json();
    const sector = sectors.find(s => s.id === 1);
    if (sector) {
        // Map installation_type to match nhom_combo
        const typeMap: { [key: string]: string } = {
            "On-Grid": "Ongrid",
            "Off-Grid": "Hybrid",
            "Hybrid": "Hybrid"
        };
        
        Combos = sector.list_combos.filter(combo => {
            const mappedType = typeMap[nhom_combo];
            if (comboId) {
                return combo.id === comboId;
            }
            return combo.installation_type === mappedType;
        });

        // Sort combos: 1-phase first, then 3-phase low voltage, then 3-phase high voltage, then by price
        Combos.sort((a, b) => {
            const aPhase = a.phase_type?.toLowerCase() || '';
            const bPhase = b.phase_type?.toLowerCase() || '';
            
            // Get phase type priority (lower number = higher priority)
            const getPhasePriority = (phase: string) => {
                if (phase.includes('1-phase')) return 1;
                if (phase.includes('3-phase low voltage')) return 2;
                if (phase.includes('3-phase high voltage')) return 3;
                if (phase.includes('3-phase')) return 4;
                return 5;
            };
            
            const aPriority = getPhasePriority(aPhase);
            const bPriority = getPhasePriority(bPhase);
            
            // First sort by phase priority
            if (aPriority !== bPriority) {
                return aPriority - bPriority;
            }
            
            // Then sort by price within the same phase type
            return a.total_price - b.total_price;
        });
    }
} catch (error) {
    console.error('Error fetching combo data:', error);
}

const getCurrentMonthYear = () => {
    const date = new Date();
    const month = date.getMonth() + 1;
    const year = date.getFullYear();
    return { month, year };
};

const { month, year } = getCurrentMonthYear();

const formatCurrency = (amount: number) => {
    return amount.toLocaleString("vi-VN");
};

const getTotalPower = (combo: Combo) => {
    const pvGroup = combo.grouped_merchandises.find((g) => g.template.code === 'PIN_PV');
    if (!pvGroup) return 0;
    return pvGroup.pre_quote_merchandises.reduce((total, item) => {
        return total + (item.quantity * item.merchandise.data_json.power_watt);
    }, 0) / 1000; // Convert to kW
};

const getTotalArea = (combo: Combo) => {
    const pvGroup = combo.grouped_merchandises.find((g) => g.template.code === 'PIN_PV');
    if (!pvGroup) return 0;
    return pvGroup.pre_quote_merchandises.reduce((total, item) => {
        return total + (item.quantity * item.merchandise.data_json.area_m2);
    }, 0);
};

const getPhaseType = (combo: Combo) => {
    const phaseType = combo.phase_type?.toLowerCase() || '';
    if (phaseType.includes('3-phase')) {
        if (phaseType.includes('low voltage')) {
            return '3-phase-low';
        }
        if (phaseType.includes('high voltage')) {
            return '3-phase-high';
        }
        return '3-phase';
    }
    if (phaseType.includes('1-phase')) {
        return '1-phase';
    }
    return '';
};

const getPhaseTypeText = (phaseType: string) => {
    const type = phaseType.toLowerCase();
    if (type.includes("1-phase")) return "1 pha";
    if (type.includes("3-phase low voltage")) return "3 pha áp thấp";
    if (type.includes("3-phase high voltage")) return "3 pha áp cao";
    if (type.includes("3-phase")) return "3 pha";
    return phaseType;
};

const formatPaybackPeriod = (years: number) => {
    const fullYears = Math.floor(years);
    const months = Math.round((years - fullYears) * 12);
    if (months === 0) {
        return `${fullYears} năm`;
    }
    return `${fullYears} năm ${months} tháng`;
};
---

<div class="bg-slate-100">
    <div class="pt-6 py-4">
        <div class="mx-auto max-w-7xl px-6 lg:px-8">
            {Combos.length > 0 ? (
                <ul
                    role="list"
                    class="mx-auto mt-6 grid max-w-2xl grid-cols-1 xl:gap-4 gap-8 md:max-w-2xl md:grid-cols-2 lg:max-w-4xl xl:mx-0 xl:max-w-none xl:grid-cols-4"
                >
                    {Combos.map((combo, index) => (
                        <div>
                            <li class="rounded-2xl bg-white xl:px-4 xl:py-4 px-4 py-4">
                                <ul role="list" class="my-4 flex justify-between gap-x-2">
                                    <li>
                                        <ul role="list" class="flex justify-between gap-x-1">
                                            <li>
                                                <button
                                                    type="button"
                                                    class={`inline-flex text-white ${combo.installation_type === "Ongrid" ? "bg-red-600" : "bg-green-600"} items-center gap-x-1.5 rounded-lg px-2.5 py-1.5 xl:text-sm text-md font-semibold shadow-sm hover:${combo.installation_type === "Ongrid" ? "bg-red-600" : "bg-green-600"} focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-${combo.installation_type === "Ongrid" ? "red-600" : "green-600"} whitespace-nowrap`}
                                                >
                                                    {combo.installation_type === "Ongrid" ? "On-Grid" : "Off-Grid"}
                                                </button>
                                            </li>
                                            <li>
                                                <button
                                                    type="button"
                                                    class={`inline-flex items-center gap-x-1.5 rounded-lg px-2.5 py-1.5 xl:text-sm text-md font-semibold text-white shadow-sm ${
                                                        getPhaseType(combo) === '1-phase'
                                                            ? "bg-blue-600 hover:bg-blue-600 focus-visible:outline-blue-600"
                                                            : getPhaseType(combo) === '3-phase-low'
                                                            ? "bg-orange-500 hover:bg-orange-500 focus-visible:outline-orange-600"
                                                            : getPhaseType(combo) === '3-phase-high'
                                                            ? "bg-red-500 hover:bg-red-500 focus-visible:outline-red-600"
                                                            : "bg-gray-600 hover:bg-gray-600 focus-visible:outline-gray-600"
                                                    } focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 whitespace-nowrap`}
                                                >
                                                    {getPhaseTypeText(combo.phase_type)}
                                                </button>
                                            </li>
                                        </ul>
                                    </li>
                                    <li>
                                        <button type="button" class="px-2.5 py-1.5 xl:text-xl text-xl font-semibold xl:hidden">
                                            {getTotalPower(combo)} kW
                                        </button>
                                    </li>
                                </ul>
                                <a href={`/goi-san-pham/${combo.id}/`}>
                                    <div class="rounded-2xl mx-auto aspect-square w-full overflow-hidden">
                                        <img 
                                            src={combo.image} 
                                            alt={combo.name}
                                            class="w-full h-full object-cover"
                                        />
                                    </div>
                                </a>

                                <div class="w-full bg-slate-100 px-6 my-6 rounded-2xl text-center py-1.5">
                                    <span>Giá niêm yết T{month}/{year}</span>
                                    <h3
                                        class={`text-3xl font-semibold ${
                                            combo.installation_type === "Ongrid"
                                                ? "text-red-600"
                                                : "text-green-600"
                                        }`}
                                    >
                                        {formatCurrency(combo.total_price)}
                                        <sup>đ</sup>
                                    </h3>
                                </div>
                                <div class="divide-y divide-gray-100 text-sm leading-6">
                                    <ul role="list" class="mt-2 flex justify-between gap-x-6">
                                        <li>
                                            <h3 class="xl:text-lg text-xl font-semibold leading-7 tracking-tight">Công suất:</h3>
                                        </li>
                                        <li>
                                            <p class="xl:text-lg text-xl font-semibold leading-6">{getTotalPower(combo)} kW</p>
                                        </li>
                                    </ul>
                                    <ul role="list" class="mt-2 flex justify-between gap-x-6">
                                        <li>
                                            <h3 class="xl:text-lg text-xl font-semibold leading-7 tracking-tight">Hệ điện:</h3>
                                        </li>
                                        <li>
                                            <p class="xl:text-lg text-xl leading-6">{getPhaseTypeText(combo.phase_type)}</p>
                                        </li>
                                    </ul>
                                    <ul role="list" class="mt-2 flex justify-between gap-x-6">
                                        <li>
                                            <h3 class="xl:text-lg text-xl text-nowrap font-semibold leading-7 tracking-tight">Sản lượng:</h3>
                                        </li>
                                        <li>
                                            <p class="xl:text-lg text-xl text-right leading-6 whitespace-nowrap">
                                                {combo.output_min}-{combo.output_max} kwh/tháng
                                            </p>
                                        </li>
                                    </ul>
                                    <ul role="list" class="mt-2 flex justify-between gap-x-6">
                                        <li>
                                            <h3 class="xl:text-lg text-xl font-semibold leading-7 tracking-tight">Hoàn vốn:</h3>
                                        </li>
                                        <li>
                                            <p class="xl:text-lg text-xl leading-6">{formatPaybackPeriod(combo.payback_period)}</p>
                                        </li>
                                    </ul>
                                    <ul role="list" class="mt-2 flex justify-between gap-x-6">
                                        <li>
                                            <h3 class="xl:text-lg text-xl font-semibold leading-7 tracking-tight">Diện tích lắp đặt:</h3>
                                        </li>
                                        <li>
                                            <p class="xl:text-lg text-xl leading-6">
                                                {Math.round(getTotalArea(combo))} m<sup>2</sup>
                                            </p>
                                        </li>
                                    </ul>
                                </div>
                                <ul role="list" class="mt-6 flex justify-between gap-x-3">
                                    <li class="w-2/3">
                                        <a href={`/goi-san-pham/${combo.id}/`}>
                                            <button
                                                type="button"
                                                class={`w-full xl:text-lg inline-flex ${
                                                    combo.installation_type === "Ongrid"
                                                        ? "bg-white border-red-600 text-red-600"
                                                        : "bg-white border-green-600 text-green-600"
                                                } items-center gap-x-1.5 rounded-xl border-2 px-2.5 py-1.5 text-lg font-semibold justify-center`}
                                            >
                                                Chi tiết cấu hình
                                            </button>
                                        </a>
                                    </li>
                                    <li class="w-1/3">
                                        <a href={`https://zalo.me/${zalo}`} target="_blank">
                                            <button
                                                type="button"
                                                class={`w-full xl:text-lg inline-flex items-center gap-x-1.5 rounded-xl border-2 px-2.5 py-1.5 text-lg font-semibold text-white justify-center ${
                                                    combo.installation_type === "Ongrid"
                                                        ? "bg-red-600 border-red-600"
                                                        : "bg-green-600 border-green-600"
                                                }`}
                                            >
                                                Liên hệ
                                            </button>
                                        </a>
                                    </li>
                                </ul>
                            </li>
                            {combo.installation_type === "Hybrid" && index === 2 && (
                               <ul class="pt-6 xl:hidden">
                                   <li class="rounded-2xl bg-white">
                                     <div class="rounded-2xl aspect-square w-full overflow-hidden">
                                        <img 
                                            src="/images/banner-pincaoap.jpg" 
                                            alt="Banner Off-Grid"
                                            class="w-full h-full object-cover"
                                        />
                                     </div>
                                    </li>   
                                    </ul>
                            )}
                        </div>
                    ))}
                </ul>
            ) : (
                <div class="text-center py-8">
                    <p class="text-lg text-gray-600">Không tìm thấy combo phù hợp</p>
                </div>
            )}
        </div>
    </div>
</div>
