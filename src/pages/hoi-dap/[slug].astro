---
import Layout from "../../layouts/Layout.astro";
import Image from "astro/components/Image.astro";
import ImageCarousel from "../../components/ImageCarousel";

interface Content {
    title: string;
    slug?: string;
    id: number;
    content: string;
    media_contents: Array<{
        link: string;
        kind: string;
    }>;
    category?: {
        image: string;
        code: string;
    };
}

interface Article {
    attributes: {
        title: string;
        slug: string;
        vi_tri: string;
        youtube_id: string;
        content: string;
        isVideo: boolean;
        media_contents: Array<{
            link: string;
            kind: string;
        }>;
        image: {
            data: {
                attributes: {
                    formats: {
                        medium: {
                            url: string;
                        };
                    };
                };
            };
        };
    };
}

function cleanHtmlContent(content: string): string {
    // Remove empty h1 tags
    return content.replace(/<h1[^>]*>\s*&nbsp;\s*<\/h1>/gi, '');
}

export async function getStaticPaths() {
    const response = await fetch('https://api.slmglobal.vn/api/sector');
    const sectors = await response.json();

    const articles = sectors[0].list_contents
        .filter((content: Content) => content.category?.code !== 'EBK')
        .map((content: Content) => ({
            slug: content.slug || content.id.toString()
        }));

    return articles.map((article: { slug: string }) => ({
        params: { slug: article.slug }
    }));
}

const { slug } = Astro.params;

const response = await fetch('https://api.slmglobal.vn/api/sector');
const sectors = await response.json();

const articles = sectors[0].list_contents
    .filter((content: Content) => content.category?.code !== 'EBK')
    .map((content: Content): Article => {
        const mediaContent = content.media_contents[0];
        const isVideo = mediaContent?.kind === 'video';
        const youtubeId = isVideo ? mediaContent?.link : 'dQw4w9WgXcQ';
        const imageUrl = isVideo 
            ? `https://img.youtube.com/vi/${youtubeId}/maxresdefault.jpg`
            : mediaContent?.link || content.category?.image || '/images/projects/default.jpg';

        return {
            attributes: {
                title: content.title,
                slug: content.slug || content.id.toString(),
                vi_tri: '',
                youtube_id: youtubeId,
                isVideo: isVideo,
                content: content.content,
                media_contents: content.media_contents,
                image: {
                    data: {
                        attributes: {
                            formats: {
                                medium: {
                                    url: imageUrl
                                }
                            }
                        }
                    }
                }
            }
        };
    });

const article = articles.find((article: Article) => article.attributes.slug === slug);

if (!article) {
    return Astro.redirect('/404');
}

const cleanedContent = cleanHtmlContent(article.attributes.content);
---

<Layout title={article.attributes.title}>
    <div class="bg-white pt-16 md:pt-8">
        <div class="mx-auto max-w-7xl px-0 md:px-6 lg:px-8">
            <div class="mx-auto">
                <div class="grid grid-cols-1 md:grid-cols-2 md:gap-8">
                    <div class="aspect-square w-full">
                        {article.attributes.isVideo ? (
                            <iframe 
                                width="100%" 
                                height="100%" 
                                src={`https://www.youtube.com/embed/${article.attributes.youtube_id}`}
                                title={article.attributes.title}
                                frameborder="0" 
                                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
                                allowfullscreen
                            ></iframe>
                        ) : article.attributes.media_contents.length > 1 ? (
                            <>
                                <div class="md:hidden">
                                    <ImageCarousel 
                                        client:load
                                        mediaContents={article.attributes.media_contents}
                                        title={article.attributes.title}
                                    />
                                </div>
                                <div class="hidden md:block aspect-square">
                                    <img 
                                        id="selected-image"
                                        src={article.attributes.media_contents[0].link} 
                                        alt={article.attributes.title}
                                        class="w-full h-full object-cover rounded-lg"
                                    />
                                </div>
                                <div class="hidden md:flex gap-2 mt-4 overflow-x-auto pb-2">
                                    {article.attributes.media_contents.map((media: { link: string; kind: string }, index: number) => (
                                        <button 
                                            class="flex-shrink-0 w-20 h-20 rounded-lg overflow-hidden border border-gray-200 hover:border-red-500 transition-colors"
                                            onclick={`document.getElementById('selected-image').src = '${media.link}'`}
                                        >
                                            <img 
                                                src={media.link} 
                                                alt={`${article.attributes.title} - ${index + 1}`}
                                                class="w-full h-full object-cover"
                                            />
                                        </button>
                                    ))}
                                </div>
                            </>
                        ) : (
                            <img 
                                src={article.attributes.image.data.attributes.formats.medium.url} 
                                alt={article.attributes.title}
                                class="w-full h-full object-cover rounded-lg"
                            />
                        )}
                    </div>

                    <div class="px-6 md:px-0">
                        <h1 class="text-2xl md:text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl !mb-2 md:!mb-0">
                            {article.attributes.title}
                        </h1>
                        <div class="prose prose-p:!my-0 max-w-none !mt-0" set:html={cleanedContent} />
                    </div>
                </div>
            </div>
        </div>
    </div>
</Layout> 