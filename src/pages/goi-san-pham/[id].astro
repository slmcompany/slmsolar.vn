---
import Layout from "../../layouts/Layout.astro";
import { PHONE_NUMBER } from "../../utils/phone";

interface Sector {
  id: number;
  name: string;
  image?: string;
  logo?: string;
  list_combos: Combo[];
}

interface Combo {
  id: number;
  name: string;
  description?: string;
  image: string;
  installation_type: string;
  total_price: number;
  payback_period: number;
  grouped_merchandises: GroupedMerchandise[];
  phase_type?: string;
  code: string;
  output_max: number;
}

interface PackageData {
  id: number;
  title: string;
  description: string;
  image: string;
  installation_type: string;
  total_price: number;
  payback_period: number;
  grouped_merchandises: GroupedMerchandise[];
  phase_type?: string;
  name: string;
  code: string;
  output_max: number;
}

interface MerchandiseData {
  power_watt: number;
  area_m2: number;
  warranty_years?: number;
  [key: string]: any;
}

interface Merchandise {
  name: string;
  data_json: MerchandiseData;
  images?: { link: string }[];
  unit?: string;
}

interface PreQuoteMerchandise {
  quantity: number;
  price: number;
  merchandise: Merchandise;
}

interface GroupedMerchandise {
  template: {
    code: string;
    name: string;
    is_main: boolean;
  };
  pre_quote_merchandises: PreQuoteMerchandise[];
}

export async function getStaticPaths() {
  try {
    const response = await fetch('https://api.slmglobal.vn/api/sector');
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    const sectors: Sector[] = await response.json();
    const sector = sectors.find((s: Sector) => s.id === 1);
    
    if (!sector) {
      return [];
    }

    return sector.list_combos.map((combo: Combo) => ({
      params: { id: combo.id.toString() },
      props: { 
        pkgData: {
          id: combo.id,
          title: combo.name,
          description: combo.description || '',
          image: combo.image,
          installation_type: combo.installation_type,
          total_price: combo.total_price,
          payback_period: combo.payback_period,
          grouped_merchandises: combo.grouped_merchandises,
          phase_type: combo.phase_type,
          name: combo.name,
          code: combo.code,
          output_max: combo.output_max
        } as PackageData,
        zalo: 'your-zalo-number',
        sector: sector
      }
    }));
  } catch (error) {
    console.error('Error fetching combo data:', error);
    return [];
  }
}

const { pkgData, zalo, sector } = Astro.props;

const getCurrentMonthYear = () => {
  const date = new Date();
  const month = date.getMonth() + 1;
  const year = date.getFullYear();
  return { month, year };
};

const { month, year } = getCurrentMonthYear();

const formatCurrency = (amount: number) => {
  const roundedAmount = Math.round(amount / 10000) * 10000;
  return roundedAmount.toLocaleString("vi-VN");
};

const formatPaybackPeriod = (years: number) => {
  const fullYears = Math.floor(years);
  const months = Math.round((years - fullYears) * 12);
  if (months === 0) {
    return `${fullYears} năm`;
  }
  return `${fullYears} năm ${months} tháng`;
};

const getTotalPower = (combo: PackageData) => {
  const pvGroup = combo.grouped_merchandises.find((g: GroupedMerchandise) => g.template.code === 'PIN_PV');
  if (!pvGroup) return 0;
  return pvGroup.pre_quote_merchandises.reduce((total: number, item: PreQuoteMerchandise) => {
    return total + (item.quantity * item.merchandise.data_json.power_watt);
  }, 0) / 1000; // Convert to kW
};

const getProductionRange = (power: number) => {
  const minProduction = Math.round(power * 80);
  const maxProduction = Math.round(power * 120);
  return `${minProduction}-${maxProduction} kWh/tháng`;
};

const getPhaseTypeText = (phaseType: string | undefined) => {
  if (!phaseType) return '';
  const type = phaseType.toLowerCase();
  if (type.includes("1-phase")) return "1 pha";
  if (type.includes("3-phase low voltage")) return "3 pha áp thấp";
  if (type.includes("3-phase high voltage")) return "3 pha áp cao";
  if (type.includes("3-phase")) return "3 pha";
  return phaseType;
};
---

<Layout title={pkgData.title}>
<div class="bg-slate-800 z-50 absolute w-full">
  <div class="mx-auto px-4 py-16 sm:px-6 sm:py-24 lg:max-w-7xl lg:px-8">
    <div class="bg-white rounded-xl">
      <!-- Close Button -->
      <div class="absolute top-16 right-1 lg:hidden">
        <button 
          onclick="window.history.back()"
          class="w-8 h-8 flex items-center justify-center rounded-full bg-red-500 hover:bg-red-600"
        >
          <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      <!-- PC Close Button -->
      <div class="absolute top-4 right-4 hidden lg:block">
        <button 
          onclick="window.history.back()"
          class="w-8 h-8 flex items-center justify-center rounded-full bg-white hover:bg-gray-100 border border-gray-200"
        >
          <svg class="w-4 h-4 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      <!-- Product Header Card -->
      <div class="bg-white rounded-xl m-4 mt-4 pt-5">
        <div class="flex gap-4 items-center">
          <img 
            src={pkgData.image} 
            alt={pkgData.title}
            class="w-[140px] h-[140px] rounded-lg bg-slate-100"
          />
          <div class="flex-1 flex flex-col justify-between h-[140px]">
            <h1 class="text-lg font-bold text-gray-900 leading-6">
              {pkgData.title}
            </h1>
            <div class="space-y-1">
              <div class="flex gap-2 items-center">
                <svg class="w-4 h-4 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
                </svg>
                <p class="text-sm text-gray-500">
                  Sản lượng: {getProductionRange(getTotalPower(pkgData))}
                </p>
              </div>
              <div class="flex gap-2 items-center">
                <svg class="w-4 h-4 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                <p class="text-sm text-gray-500">
                  Thời gian hoàn vốn: {formatPaybackPeriod(pkgData.payback_period)}
                </p>
              </div>
            </div>
            <p class="text-xl font-bold text-red-600">
              {formatCurrency(pkgData.total_price)}đ
            </p>
          </div>
        </div>
      </div>

      <!-- System Overview -->
      <div class="bg-slate-100">
        <div class="bg-green-600 p-1 px-3 flex justify-between items-center">
          <div class="flex items-center gap-2">
            {sector?.image && (
              <img 
                src={sector.image} 
                alt="Sector"
                class="h-5 rounded"
              />
            )}
            {sector?.logo && (
              <img 
                src={sector.logo} 
                alt="Logo"
                class="w-8 h-4"
              />
            )}
          </div>
          <p class="text-white text-sm font-semibold flex-1 text-right">
            Bật để Tiết kiệm Điện
          </p>
        </div>

        <div class="p-3 relative">
          <div class="mb-3 flex flex-col sm:flex-row justify-between items-start sm:items-center gap-2 sm:gap-1">
            <h2 class="text-lg font-bold text-green-900 leading-5">
              {pkgData.title}
            </h2>
            <div class="flex flex-wrap gap-1">
              <div class="bg-white py-1 px-3 rounded-full min-w-20 text-center border border-gray-200 shadow-sm">
                <p class="text-xs text-gray-600">
                  {pkgData.installation_type === "Ongrid" ? "HỆ BÁM TẢI" : "HỆ ĐỘC LẬP"}
                </p>
              </div>
              <div class="bg-white py-1 px-3 rounded-full min-w-20 text-center border border-gray-200 shadow-sm">
                <p class="text-xs text-gray-600">
                  {getPhaseTypeText(pkgData.phase_type)}
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Equipment List -->
      <div class="p-4 space-y-3">
        {pkgData.grouped_merchandises
          ?.filter((group: GroupedMerchandise) => group.template.is_main)
          .map((group: GroupedMerchandise) => {
            const firstItem = group.pre_quote_merchandises[0];
            if (!firstItem) return null;

            return (
              <div class="bg-white rounded-lg p-3 shadow">
                <div class="flex gap-3">
                  <div class="relative">
                    {firstItem.merchandise.data_json?.warranty_years && (
                      <div class="absolute bottom-1 left-1 bg-red-600 px-2 py-0.5 rounded z-10">
                        <p class="text-xs text-white font-medium leading-4 whitespace-nowrap">
                          Bảo hành {firstItem.merchandise.data_json.warranty_years} năm
                        </p>
                      </div>
                    )}
                    <img 
                      src={firstItem.merchandise?.images?.[0]?.link || "/images/replace-holder.png"} 
                      alt={firstItem.merchandise.name}
                      class="w-24 h-24 rounded bg-slate-100"
                    />
                  </div>
                  <div class="flex-1">
                    <h3 class="text-base text-gray-900">
                      {firstItem.merchandise.name}
                    </h3>
                    {firstItem.merchandise.data_json && (
                      <div class="mt-0.5">
                        {Object.entries(firstItem.merchandise.data_json)
                          .filter(([key]) => 
                            !['price_vnd', 'area_m2', 'thickness_mm', 'height_mm', 'width_mm', 
                              'warranty_years', 'phase_type', 'weight_kg', 'brand_ranking',
                              'installation_type', 'cell_brand', 'max_upgrade_kwh', 'inverter_rating']
                              .includes(key)
                          )
                          .slice(0, 2)
                          .map(([key, value]) => {
                            const displayKey = {
                              'power_watt': 'Công suất',
                              'technology': 'Công nghệ',
                              'installation_method': 'Lắp đặt',
                              'dc_max_power_kw': 'Đầu vào DC Max',
                              'ac_power_kw': 'Công suất AC',
                              'storage_capacity_kwh': 'Dung lượng'
                            }[key] || key;

                            const displayValue = {
                              'dc_max_power_kw': `${value} kW`,
                              'ac_power_kw': `${value} kW`,
                              'storage_capacity_kwh': `${value} kWh`,
                              'power_watt': `${value} Wp`
                            }[key] || value;

                            return (
                              <p class="text-xs text-gray-500 leading-5">
                                {displayKey}: {displayValue}
                              </p>
                            );
                          })}
                      </div>
                    )}
                    <div class="flex justify-between items-center mt-2">
                      <p class="text-base text-red-600 font-semibold">
                        {formatCurrency(firstItem.price)}đ
                      </p>
                      <div class="flex items-center gap-1">
                        <p class="text-xs text-gray-500 font-medium">Số lượng</p>
                        <div class="bg-gray-500 px-2 h-5 rounded min-w-5 flex items-center justify-center">
                          <p class="text-xs text-white font-medium text-center">
                            {firstItem.quantity}
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            );
          })}
      </div>

      <!-- Price and Commitment -->
      <div class="bg-slate-100 p-4 flex justify-between items-center">
        <div class="flex-1">
          <p class="text-sm font-bold text-gray-900 leading-5">Trọn gói 100%</p>
          <p class="text-sm font-bold text-gray-900 leading-5">Cam kết không phát sinh</p>
          <p class="text-sm font-bold text-gray-900 leading-5">với mái ngói, mái tôn</p>
        </div>
        <div class="bg-red-600 flex items-center px-2 py-1 rounded ml-4 border border-white">
          <p class="text-xl font-bold text-white">
            {formatCurrency(pkgData.total_price)}
          </p>
          <p class="text-sm font-bold text-white ml-0.5">đ</p>
        </div>
      </div>

      <!-- Equipment List (Duplicated) -->
      <div class="p-4 bg-white mt-4">
        <h3 class="text-base font-bold text-gray-500 mb-4 text-center">DANH MỤC THIẾT BỊ</h3>

        {pkgData.grouped_merchandises?.map((group: GroupedMerchandise, index: number) => (
          <div class="border-b border-gray-200 py-3">
            <div class="flex gap-3 justify-between items-center">
              <p class="w-6 text-lg font-medium text-gray-900 text-center">{index + 1}</p>
              <p class="flex-1 text-base text-gray-900">{group.template.name}</p>
              <p class="text-base font-medium text-gray-900 text-right min-w-[60px]">
                {group.template.is_main
                  ? `${group.pre_quote_merchandises[0]?.quantity} ${group.pre_quote_merchandises[0]?.merchandise.unit}`
                  : '1 Bộ'}
              </p>
            </div>
          </div>
        ))}
      </div>

      <!-- Tax Info and Hotline -->
      <div class="bg-slate-100 p-2.5 px-4 flex justify-between items-center gap-4">
        <div class="flex-1">
          <p class="text-xs leading-4 text-gray-500">Giá đã bao gồm thuế. Phí vận chuyển và các chi phí khác (nếu có) sẽ được thông báo tới quý khách hàng thông qua nhân viên tư vấn.</p>
        </div>
        <a href={`tel:${PHONE_NUMBER}`} class="bg-red-600 flex items-center gap-2 py-1 px-3 rounded-full">
          <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
          </svg>
          <p class="text-sm font-bold text-white">0929 884 950</p>
        </a>
      </div>

      <!-- Company Info -->
      <div class="bg-gray-200 p-4">
        <div class="flex justify-between items-start">
          <div class="flex-1 mr-4">
            <p class="text-sm font-bold text-gray-900 mb-2">CÔNG TY CỔ PHẦN ĐẦU TƯ SLM</p>
            <div class="space-y-0.5">
              <p class="text-xs text-gray-900 leading-4">Tầng 5, Tòa nhà Diamond Flower Tower</p>
              <p class="text-xs text-gray-900 leading-4">Số 01, Đ. Hoàng Đạo Thúy, P. Nhân Chính</p>
              <p class="text-xs text-gray-900 leading-4">Quận Thanh Xuân, Hà Nội</p>
            </div>
          </div>
          <img 
            src="/images/qr-bank.png" 
            alt="QR Code"
            class="h-28 rounded "
          />
        </div>
      </div>

      <!-- Website and Social Media -->
      <div class="bg-gray-900 flex justify-between items-center p-1.5 px-4 gap-3.5">
        <div class="flex items-center gap-1">
          <svg class="w-3 h-3 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9" />
          </svg>
          <p class="text-xs font-bold text-white leading-4">www.slmsolar.com</p>
        </div>
        <div class="flex items-center gap-1.75">
          <div class="flex gap-1 items-center">
            <div class="w-4 h-4 bg-white rounded-full flex items-center justify-center">
              <svg class="w-2 h-2 text-gray-500" fill="currentColor" viewBox="0 0 24 24">
                <path d="M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z" />
              </svg>
            </div>
            <div class="w-4 h-4 bg-white rounded-full flex items-center justify-center">
              <svg class="w-2 h-2 text-gray-500" fill="currentColor" viewBox="0 0 24 24">
                <path d="M19.615 3.184c-3.604-.246-11.631-.245-15.23 0-3.897.266-4.356 2.62-4.385 8.816.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0 3.897-.266 4.356-2.62 4.385-8.816-.029-6.185-.484-8.549-4.385-8.816zm-10.615 12.816v-8l8 3.993-8 4.007z" />
              </svg>
            </div>
            <div class="w-4 h-4 bg-white rounded-full flex items-center justify-center">
              <svg class="w-2 h-2 text-gray-500" fill="currentColor" viewBox="0 0 24 24">
                <path d="M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zm.066 4.5c1.941 0 3.505 1.564 3.505 3.505 0 1.94-1.564 3.505-3.505 3.505-1.94 0-3.505-1.565-3.505-3.505 0-1.941 1.565-3.505 3.505-3.505zm-6.5 3.5c0-3.59 2.91-6.5 6.5-6.5s6.5 2.91 6.5 6.5-2.91 6.5-6.5 6.5-6.5-2.91-6.5-6.5zm6.5 6.5c3.59 0 6.5 2.91 6.5 6.5s-2.91 6.5-6.5 6.5-6.5-2.91-6.5-6.5 2.91-6.5 6.5-6.5z" />
              </svg>
            </div>
          </div>
          <p class="text-xs font-bold text-white leading-4">@solarmax87</p>
        </div>
      </div>
    </div>
  </div>
</div>
</Layout>